-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-06-12 01:49:47 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE grad (
    idgrad  INTEGER NOT NULL,
    nazgrad VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE grad ADD CONSTRAINT grad_pk PRIMARY KEY ( idgrad );

CREATE TABLE hitan (
    idkvar INTEGER NOT NULL
);

ALTER TABLE hitan ADD CONSTRAINT hitan_pk PRIMARY KEY ( idkvar );

CREATE TABLE hitanzahtev (
    izzah        INTEGER NOT NULL,
    hitan_idkvar INTEGER NOT NULL
);

CREATE UNIQUE INDEX hitanzahtev__idx ON
    hitanzahtev (
        hitan_idkvar
    ASC );

ALTER TABLE hitanzahtev ADD CONSTRAINT hitanzahtev_pk PRIMARY KEY ( izzah );

CREATE TABLE inventar (
    idinv        INTEGER NOT NULL,
    nazinv       VARCHAR2(30 CHAR) NOT NULL,
    kolinv       INTEGER,
    zgrada_idzgr INTEGER,
    kolinv1      INTEGER
);

ALTER TABLE inventar ADD CONSTRAINT inventar_pk PRIMARY KEY ( idinv );

CREATE TABLE izvestaj (
    idizv                 INTEGER NOT NULL,
    prihod                INTEGER,
    rashod                INTEGER,
    datizv                INTEGER,
    upravnik_jmbgo        VARCHAR2(13 CHAR) NOT NULL,
    tipizvestaja_idtipizv INTEGER NOT NULL
);

ALTER TABLE izvestaj ADD CONSTRAINT izvestaj_pk PRIMARY KEY ( idizv );

CREATE TABLE izvodjac (
    idizv  INTEGER NOT NULL,
    nazizv VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE izvodjac ADD CONSTRAINT izvodjac_pk PRIMARY KEY ( idizv );

CREATE TABLE kvar (
    idkvar               INTEGER NOT NULL,
    stanuje_stanar_jmbgo VARCHAR2(13 CHAR) NOT NULL,
    stanuje_stan_redbrst INTEGER NOT NULL,
    vrkvar               VARCHAR2(30 CHAR) NOT NULL,
    stanuje_idzgr        INTEGER NOT NULL
);

ALTER TABLE kvar
    ADD CONSTRAINT fkarc_1_lov CHECK ( vrkvar IN ( 'Obican', 'Lican', 'Hitan' ) );

ALTER TABLE kvar ADD CONSTRAINT kvar_pk PRIMARY KEY ( idkvar );

CREATE TABLE kvarnasednici (
    sednica_idsed       INTEGER NOT NULL,
    zahtevzakvar_izzah  INTEGER NOT NULL,
    zahtevzakvar_idkvar INTEGER NOT NULL
);

ALTER TABLE kvarnasednici
    ADD CONSTRAINT kvarnasednici_pk PRIMARY KEY ( sednica_idsed,
                                                  zahtevzakvar_izzah,
                                                  zahtevzakvar_idkvar );

CREATE TABLE lican (
    idkvar INTEGER NOT NULL
);

ALTER TABLE lican ADD CONSTRAINT lican_pk PRIMARY KEY ( idkvar );

CREATE TABLE licniizvodjac (
    izvodjac_idizv INTEGER NOT NULL,
    lican_idkvar   INTEGER NOT NULL
);

ALTER TABLE licniizvodjac ADD CONSTRAINT licniizvodjac_pk PRIMARY KEY ( izvodjac_idizv,
                                                                        lican_idkvar );

CREATE TABLE obavestenje (
    ido            INTEGER NOT NULL,
    tekst          VARCHAR2(150 CHAR),
    upravnik_jmbgo VARCHAR2(13 CHAR) NOT NULL,
    osoba_jmbgo    VARCHAR2(13 CHAR) NOT NULL
);

ALTER TABLE obavestenje ADD CONSTRAINT obavestenje_pk PRIMARY KEY ( ido );

CREATE TABLE obican (
    idkvar INTEGER NOT NULL
);

ALTER TABLE obican ADD CONSTRAINT obican_pk PRIMARY KEY ( idkvar );

CREATE TABLE obicanzahtev (
    izzah INTEGER NOT NULL
);

ALTER TABLE obicanzahtev ADD CONSTRAINT obicanzahtev_pk PRIMARY KEY ( izzah );

CREATE TABLE odrzavanje (
    idodr                  INTEGER NOT NULL,
    razodr                 VARCHAR2(30 CHAR) NOT NULL,
    tipodrzavanja_idtipodr INTEGER NOT NULL,
    stanar_jmbgo           VARCHAR2(13 CHAR),
    upravnik_jmbgo         VARCHAR2(13 CHAR),
    izvodjac_idizv         INTEGER,
    predlog_stanar_jmbgo   VARCHAR2(30 CHAR),
    predlog_datpr          DATE,
    predlog_izvodjac_idizv INTEGER
);

CREATE UNIQUE INDEX odrzavanje__idx ON
    odrzavanje (
        predlog_stanar_jmbgo
    ASC,
        predlog_datpr
    ASC,
        predlog_izvodjac_idizv
    ASC );

ALTER TABLE odrzavanje ADD CONSTRAINT odrzavanje_pk PRIMARY KEY ( idodr );

CREATE TABLE odrzavanjeglasanje (
    odrzavanjenasednici_idsed            INTEGER NOT NULL, 
    odrnased_odrzavanje_idodr INTEGER NOT NULL,
    stanar_jmbgo                         VARCHAR2(13 CHAR) NOT NULL,
    komodr                               VARCHAR2(60 CHAR),
    zaodr                                CHAR(1)
);

ALTER TABLE odrzavanjeglasanje
    ADD CONSTRAINT odrzavanjeglasanje_pk PRIMARY KEY ( odrzavanjenasednici_idsed,
                                                       odrnased_odrzavanje_idodr,
                                                       stanar_jmbgo );

CREATE TABLE odrzavanjenasednici (
    sednica_idsed    INTEGER NOT NULL,
    odrzavanje_idodr INTEGER NOT NULL
);

ALTER TABLE odrzavanjenasednici ADD CONSTRAINT odrzavanjenasednici_pk PRIMARY KEY ( sednica_idsed,
                                                                                    odrzavanje_idodr );

CREATE TABLE osoba (
    jmbgo  VARCHAR2(13 CHAR) NOT NULL,
    imeo   VARCHAR2(30 CHAR) NOT NULL,
    przo   VARCHAR2(30 CHAR) NOT NULL,
    godo   INTEGER NOT NULL,
    ulogao VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE osoba ADD CONSTRAINT osoba_pk PRIMARY KEY ( jmbgo );

CREATE TABLE poslovniracun (
    brrac  INTEGER NOT NULL,
    bilans INTEGER
);

ALTER TABLE poslovniracun ADD CONSTRAINT poslovniracun_pk PRIMARY KEY ( brrac );

CREATE TABLE predlog (
    datpr            DATE NOT NULL,
    stanar_jmbgo     VARCHAR2(30 CHAR) NOT NULL,
    izvodjac_idizv   INTEGER NOT NULL,
    odrzavanje_idodr INTEGER
);

CREATE UNIQUE INDEX predlog__idx ON
    predlog (
        odrzavanje_idodr
    ASC );

ALTER TABLE predlog
    ADD CONSTRAINT predlog_pk PRIMARY KEY ( stanar_jmbgo,
                                            datpr,
                                            izvodjac_idizv );

CREATE TABLE resenje (
    idres                                INTEGER NOT NULL, 
    odrnased_sednica_idsed    INTEGER NOT NULL, 
    odrnased_odrzavanje_idodr INTEGER NOT NULL
);

ALTER TABLE resenje ADD CONSTRAINT resenje_pk PRIMARY KEY ( idres );

CREATE TABLE sednica (
    idsed          INTEGER NOT NULL,
    datsed         DATE NOT NULL,
    upravnik_jmbgo VARCHAR2(13 CHAR) NOT NULL
);

ALTER TABLE sednica ADD CONSTRAINT sednica_pk PRIMARY KEY ( idsed );

CREATE TABLE stan (
    redbrst       INTEGER NOT NULL,
    zgrada_idzgr INTEGER NOT NULL
);

ALTER TABLE stan ADD CONSTRAINT stan_pk PRIMARY KEY ( redbrst,
                                                      zgrada_idzgr );

CREATE TABLE stanar (
    jmbgo VARCHAR2(13 CHAR) NOT NULL
);

ALTER TABLE stanar ADD CONSTRAINT stanar_pk PRIMARY KEY ( jmbgo );

CREATE TABLE stanuje (
    stan_redbrst       INTEGER NOT NULL,
    stanar_jmbgo       VARCHAR2(13 CHAR) NOT NULL,
    stan_zgrada_idzgr INTEGER NOT NULL
);

ALTER TABLE stanuje
    ADD CONSTRAINT stanuje_pk PRIMARY KEY ( stanar_jmbgo,
                                            stan_redbrst,
                                            stan_zgrada_idzgr );

CREATE TABLE tipizvestaja (
    idtipizv INTEGER NOT NULL,
    nazizv   VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE tipizvestaja ADD CONSTRAINT tipizvestaja_pk PRIMARY KEY ( idtipizv );

CREATE TABLE tipodrzavanja (
    idtipodr INTEGER NOT NULL,
    nazodr   VARCHAR2(30 CHAR) NOT NULL,
    opisodr  VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE tipodrzavanja ADD CONSTRAINT tipodrzavanja_pk PRIMARY KEY ( idtipodr );

CREATE TABLE upravljazgradom (
    upravnik_jmbgo VARCHAR2(13 CHAR) NOT NULL,
    zgrada_idzgr   INTEGER NOT NULL
);

ALTER TABLE upravljazgradom ADD CONSTRAINT upravljazgradom_pk PRIMARY KEY ( upravnik_jmbgo,
                                                                            zgrada_idzgr );

CREATE TABLE upravnik (
    jmbgo VARCHAR2(13 CHAR) NOT NULL
);

ALTER TABLE upravnik ADD CONSTRAINT upravnik_pk PRIMARY KEY ( jmbgo );

CREATE TABLE zahtev (
    izzah                          INTEGER NOT NULL,
    upravljazgradom_upravnik_jmbgo VARCHAR2(13 CHAR) NOT NULL,
    upravljazgradom_zgrada_idzgr   INTEGER NOT NULL,
    vrzah                          VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE zahtev
    ADD CONSTRAINT fkarc_3_lov CHECK ( vrzah IN ( 'HitanZahtev', 'ObicanZahtev' ) );

ALTER TABLE zahtev ADD CONSTRAINT zahtev_pk PRIMARY KEY ( izzah );

CREATE TABLE zahtevzakvar (
    obicanzahtev_izzah INTEGER NOT NULL,
    obican_idkvar      INTEGER NOT NULL,
    prihvacen          CHAR(1)
);

ALTER TABLE zahtevzakvar ADD CONSTRAINT zahtevzakvar_pk PRIMARY KEY ( obicanzahtev_izzah,
                                                                      obican_idkvar );

CREATE TABLE zgrada (
    idzgr               INTEGER NOT NULL,
    nazzgr              VARCHAR2(30 CHAR) NOT NULL,
    grad_idgrad         INTEGER NOT NULL,
    poslovniracun_brrac INTEGER NOT NULL
);

CREATE UNIQUE INDEX zgrada__idx ON
    zgrada (
        poslovniracun_brrac
    ASC );

ALTER TABLE zgrada ADD CONSTRAINT zgrada_pk PRIMARY KEY ( idzgr );

ALTER TABLE hitan
    ADD CONSTRAINT hitan_kvar_fk FOREIGN KEY ( idkvar )
        REFERENCES kvar ( idkvar );

ALTER TABLE hitanzahtev
    ADD CONSTRAINT hitanzahtev_hitan_fk FOREIGN KEY ( hitan_idkvar )
        REFERENCES hitan ( idkvar );

ALTER TABLE hitanzahtev
    ADD CONSTRAINT hitanzahtev_zahtev_fk FOREIGN KEY ( izzah )
        REFERENCES zahtev ( izzah );

ALTER TABLE inventar
    ADD CONSTRAINT inventar_zgrada_fk FOREIGN KEY ( zgrada_idzgr )
        REFERENCES zgrada ( idzgr );

ALTER TABLE izvestaj
    ADD CONSTRAINT izvestaj_tipizvestaja_fk FOREIGN KEY ( tipizvestaja_idtipizv )
        REFERENCES tipizvestaja ( idtipizv );

ALTER TABLE izvestaj
    ADD CONSTRAINT izvestaj_upravnik_fk FOREIGN KEY ( upravnik_jmbgo )
        REFERENCES upravnik ( jmbgo );

ALTER TABLE kvar
    ADD CONSTRAINT kvar_stanuje_fk FOREIGN KEY ( stanuje_stanar_jmbgo,
                                                 stanuje_stan_redbrst,
                                                 stanuje_idzgr )
        REFERENCES stanuje ( stanar_jmbgo,
                             stan_redbrst,
                             stan_zgrada_idzgr );

ALTER TABLE kvarnasednici
    ADD CONSTRAINT kvarnasednici_sednica_fk FOREIGN KEY ( sednica_idsed )
        REFERENCES sednica ( idsed );

ALTER TABLE kvarnasednici
    ADD CONSTRAINT kvarnasednici_zahtevzakvar_fk FOREIGN KEY ( zahtevzakvar_izzah,
                                                               zahtevzakvar_idkvar )
        REFERENCES zahtevzakvar ( obicanzahtev_izzah,
                                  obican_idkvar );

ALTER TABLE lican
    ADD CONSTRAINT lican_kvar_fk FOREIGN KEY ( idkvar )
        REFERENCES kvar ( idkvar );

ALTER TABLE licniizvodjac
    ADD CONSTRAINT licniizvodjac_izvodjac_fk FOREIGN KEY ( izvodjac_idizv )
        REFERENCES izvodjac ( idizv );

ALTER TABLE licniizvodjac
    ADD CONSTRAINT licniizvodjac_lican_fk FOREIGN KEY ( lican_idkvar )
        REFERENCES lican ( idkvar );

ALTER TABLE obavestenje
    ADD CONSTRAINT obavestenje_osoba_fk FOREIGN KEY ( osoba_jmbgo )
        REFERENCES osoba ( jmbgo );

ALTER TABLE obavestenje
    ADD CONSTRAINT obavestenje_upravnik_fk FOREIGN KEY ( upravnik_jmbgo )
        REFERENCES upravnik ( jmbgo );

ALTER TABLE obican
    ADD CONSTRAINT obican_kvar_fk FOREIGN KEY ( idkvar )
        REFERENCES kvar ( idkvar );

ALTER TABLE obicanzahtev
    ADD CONSTRAINT obicanzahtev_zahtev_fk FOREIGN KEY ( izzah )
        REFERENCES zahtev ( izzah );

ALTER TABLE odrzavanje
    ADD CONSTRAINT odrzavanje_izvodjac_fk FOREIGN KEY ( izvodjac_idizv )
        REFERENCES izvodjac ( idizv );

ALTER TABLE odrzavanje
    ADD CONSTRAINT odrzavanje_predlog_fk FOREIGN KEY ( predlog_stanar_jmbgo,
                                                       predlog_datpr,
                                                       predlog_izvodjac_idizv )
        REFERENCES predlog ( stanar_jmbgo,
                             datpr,
                             izvodjac_idizv );

ALTER TABLE odrzavanje
    ADD CONSTRAINT odrzavanje_stanar_fk FOREIGN KEY ( stanar_jmbgo )
        REFERENCES stanar ( jmbgo );

ALTER TABLE odrzavanje
    ADD CONSTRAINT odrzavanje_tipodrzavanja_fk FOREIGN KEY ( tipodrzavanja_idtipodr )
        REFERENCES tipodrzavanja ( idtipodr );

ALTER TABLE odrzavanje
    ADD CONSTRAINT odrzavanje_upravnik_fk FOREIGN KEY ( upravnik_jmbgo )
        REFERENCES upravnik ( jmbgo );

ALTER TABLE odrzavanjeglasanje
    ADD CONSTRAINT odrglasanje_odrnased_fk FOREIGN KEY ( odrzavanjenasednici_idsed,
                                                                           odrnased_odrzavanje_idodr )
        REFERENCES odrzavanjenasednici ( sednica_idsed,
                                         odrzavanje_idodr );

ALTER TABLE odrzavanjeglasanje
    ADD CONSTRAINT odrzavanjeglasanje_stanar_fk FOREIGN KEY ( stanar_jmbgo )
        REFERENCES stanar ( jmbgo );

ALTER TABLE odrzavanjenasednici
    ADD CONSTRAINT odrnased_odrzavanje_fk FOREIGN KEY ( odrzavanje_idodr )
        REFERENCES odrzavanje ( idodr );

ALTER TABLE odrzavanjenasednici
    ADD CONSTRAINT odrzavanjenasednici_sednica_fk FOREIGN KEY ( sednica_idsed )
        REFERENCES sednica ( idsed );

ALTER TABLE predlog
    ADD CONSTRAINT predlog_izvodjac_fk FOREIGN KEY ( izvodjac_idizv )
        REFERENCES izvodjac ( idizv );

ALTER TABLE predlog
    ADD CONSTRAINT predlog_odrzavanje_fk FOREIGN KEY ( odrzavanje_idodr )
        REFERENCES odrzavanje ( idodr );

ALTER TABLE predlog
    ADD CONSTRAINT predlog_stanar_fk FOREIGN KEY ( stanar_jmbgo )
        REFERENCES stanar ( jmbgo );

ALTER TABLE resenje
    ADD CONSTRAINT resenje_odrzavanjenasednici_fk FOREIGN KEY ( odrnased_sednica_idsed,
                                                                odrnased_odrzavanje_idodr )
        REFERENCES odrzavanjenasednici ( sednica_idsed,
                                         odrzavanje_idodr );

ALTER TABLE sednica
    ADD CONSTRAINT sednica_upravnik_fk FOREIGN KEY ( upravnik_jmbgo )
        REFERENCES upravnik ( jmbgo );

ALTER TABLE stan
    ADD CONSTRAINT stan_zgrada_fk FOREIGN KEY ( zgrada_idzgr )
        REFERENCES zgrada ( idzgr );

ALTER TABLE stanar
    ADD CONSTRAINT stanar_osoba_fk FOREIGN KEY ( jmbgo )
        REFERENCES osoba ( jmbgo );

ALTER TABLE stanuje
    ADD CONSTRAINT stanuje_stan_fk FOREIGN KEY ( stan_redbrst,
                                                 stan_zgrada_idzgr )
        REFERENCES stan ( redbrst,
                          zgrada_idzgr );

ALTER TABLE stanuje
    ADD CONSTRAINT stanuje_stanar_fk FOREIGN KEY ( stanar_jmbgo )
        REFERENCES stanar ( jmbgo );

ALTER TABLE upravljazgradom
    ADD CONSTRAINT upravljazgradom_upravnik_fk FOREIGN KEY ( upravnik_jmbgo )
        REFERENCES upravnik ( jmbgo );

ALTER TABLE upravljazgradom
    ADD CONSTRAINT upravljazgradom_zgrada_fk FOREIGN KEY ( zgrada_idzgr )
        REFERENCES zgrada ( idzgr );

ALTER TABLE upravnik
    ADD CONSTRAINT upravnik_osoba_fk FOREIGN KEY ( jmbgo )
        REFERENCES osoba ( jmbgo );

ALTER TABLE zahtev
    ADD CONSTRAINT zahtev_upravljazgradom_fk FOREIGN KEY ( upravljazgradom_upravnik_jmbgo,
                                                           upravljazgradom_zgrada_idzgr )
        REFERENCES upravljazgradom ( upravnik_jmbgo,
                                     zgrada_idzgr );

ALTER TABLE zahtevzakvar
    ADD CONSTRAINT zahtevzakvar_obican_fk FOREIGN KEY ( obican_idkvar )
        REFERENCES obican ( idkvar );

ALTER TABLE zahtevzakvar
    ADD CONSTRAINT zahtevzakvar_obicanzahtev_fk FOREIGN KEY ( obicanzahtev_izzah )
        REFERENCES obicanzahtev ( izzah );

ALTER TABLE zgrada
    ADD CONSTRAINT zgrada_grad_fk FOREIGN KEY ( grad_idgrad )
        REFERENCES grad ( idgrad );

ALTER TABLE zgrada
    ADD CONSTRAINT zgrada_poslovniracun_fk FOREIGN KEY ( poslovniracun_brrac )
        REFERENCES poslovniracun ( brrac );

CREATE OR REPLACE TRIGGER arc_fkarc_2_stanar BEFORE
    INSERT OR UPDATE OF jmbgo ON stanar
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.ulogao
    INTO d
    FROM
        osoba a
    WHERE
        a.jmbgo = :new.jmbgo;

    IF ( d IS NULL OR d <> 'Stanar' ) THEN
        raise_application_error(-20223, 'FK Stanar_Osoba_FK in Table Stanar violates Arc constraint on Table Osoba - discriminator column ulogao doesn''t have value ''Stanar'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_upravnik BEFORE
    INSERT OR UPDATE OF jmbgo ON upravnik
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.ulogao
    INTO d
    FROM
        osoba a
    WHERE
        a.jmbgo = :new.jmbgo;

    IF ( d IS NULL OR d <> 'Upravnik' ) THEN
        raise_application_error(-20223, 'FK Upravnik_Osoba_FK in Table Upravnik violates Arc constraint on Table Osoba - discriminator column ulogao doesn''t have value ''Upravnik'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_obican BEFORE
    INSERT OR UPDATE OF idkvar ON obican
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.vrkvar
    INTO d
    FROM
        kvar a
    WHERE
        a.idkvar = :new.idkvar;

    IF ( d IS NULL OR d <> 'Obican' ) THEN
        raise_application_error(-20223, 'FK Obican_Kvar_FK in Table Obican violates Arc constraint on Table Kvar - discriminator column vrkvar doesn''t have value ''Obican'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_lican BEFORE
    INSERT OR UPDATE OF idkvar ON lican
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.vrkvar
    INTO d
    FROM
        kvar a
    WHERE
        a.idkvar = :new.idkvar;

    IF ( d IS NULL OR d <> 'Lican' ) THEN
        raise_application_error(-20223, 'FK Lican_Kvar_FK in Table Lican violates Arc constraint on Table Kvar - discriminator column vrkvar doesn''t have value ''Lican'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_hitan BEFORE
    INSERT OR UPDATE OF idkvar ON hitan
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.vrkvar
    INTO d
    FROM
        kvar a
    WHERE
        a.idkvar = :new.idkvar;

    IF ( d IS NULL OR d <> 'Hitan' ) THEN
        raise_application_error(-20223, 'FK Hitan_Kvar_FK in Table Hitan violates Arc constraint on Table Kvar - discriminator column vrkvar doesn''t have value ''Hitan'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER trg_check_izvodjac_or_predlog BEFORE
    INSERT OR UPDATE ON odrzavanje FOR EACH ROW
BEGIN
    IF (:NEW.izvodjac_idizv IS NOT NULL AND 
        (:NEW.predlog_stanar_jmbgo IS NOT NULL OR
         :NEW.predlog_datpr IS NOT NULL OR
         :NEW.predlog_izvodjac_idizv IS NOT NULL)) OR
       (:NEW.izvodjac_idizv IS NULL AND 
        (:NEW.predlog_stanar_jmbgo IS NULL AND
         :NEW.predlog_datpr IS NULL AND
         :NEW.predlog_izvodjac_idizv IS NULL)) THEN
        raise_application_error(-20001, 'Either izvodjac_idizv must be set, or all predlog_* fields must be set, but not both or neither.');
    END IF;
END;
/


CREATE OR REPLACE TRIGGER arc_fkarc_3_hitanzahtev BEFORE
    INSERT OR UPDATE OF izzah ON hitanzahtev
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.vrzah
    INTO d
    FROM
        zahtev a
    WHERE
        a.izzah = :new.izzah;

    IF ( d IS NULL OR d <> 'HitanZahtev' ) THEN
        raise_application_error(-20223, 'FK HitanZahtev_Zahtev_FK in Table HitanZahtev violates Arc constraint on Table Zahtev - discriminator column vrzah doesn''t have value ''HitanZahtev'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_3_obicanzahtev BEFORE
    INSERT OR UPDATE OF izzah ON obicanzahtev
    FOR EACH ROW
DECLARE
    d VARCHAR2(30 CHAR);
BEGIN
    SELECT
        a.vrzah
    INTO d
    FROM
        zahtev a
    WHERE
        a.izzah = :new.izzah;

    IF ( d IS NULL OR d <> 'ObicanZahtev' ) THEN
        raise_application_error(-20223, 'FK ObicanZahtev_Zahtev_FK in Table ObicanZahtev violates Arc constraint on Table Zahtev - discriminator column vrzah doesn''t have value ''ObicanZahtev'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            31
-- CREATE INDEX                             4
-- ALTER TABLE                             77
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
